events {
    worker_connections 1024;
}

http {
    upstream api {
        # server housing-api:8000;  # For Docker Compose
        server housing-api-service:8000;  # For Kubernetes (uncomment if using K8s)
    }
   
    upstream frontend {
        # server housing-frontend:3000;  # For Docker Compose
        server housing-frontend-service:3000;  # For Kubernetes (uncomment if using K8s)
    }
   
    server {
        listen 80;
        server_name localhost;
       
        # Increase body size for file uploads
        client_max_body_size 100M;
       
        # API routes - strip /api prefix when forwarding
        location /api/ {
            # This strips /api from the path: /api/predict becomes /predict
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add CORS headers for all responses
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
           
            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
       
        # Direct API access (backup route)
        location /predict {
            proxy_pass http://api/predict;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        }
       
        # Health check endpoint
        location /health {
            proxy_pass http://api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
       
        # Static assets for React app
        location /static/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
        }
        
        # Frontend routes (must be last - catch-all)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}w