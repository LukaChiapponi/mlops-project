# Simple PersistentVolume approach for model storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pvc
  namespace: housing-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
# Job to initialize model in PVC
apiVersion: batch/v1
kind: Job
metadata:
  name: model-loader
  namespace: housing-app
spec:
  template:
    spec:
      containers:
      - name: model-loader
        image: housing-api:latest  # This image should contain your trained_model.h5
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "Initializing model storage..."
            if [ -f "/app/trained_model.h5" ]; then
              echo "Copying model to persistent storage..."
              cp /app/trained_model.h5 /models/trained_model.h5
              echo "Model copied successfully to /models/trained_model.h5"
              ls -la /models/
            else
              echo "Creating placeholder model file..."
              echo "placeholder model data" > /models/trained_model.h5
              echo "Placeholder created (replace with actual model loading logic)"
            fi
        volumeMounts:
        - name: model-storage
          mountPath: /models
      restartPolicy: Never
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc
  backoffLimit: 3