name: Auto Deploy to Kubernetes

on:
  push:
    branches: [ main ]
    paths:
      - 'mlops-project/docker/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'mlops-project/docker/**'

env:
  REGISTRY: ghcr.io
  NAMESPACE: housing-app

jobs:
  deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Kubernetes connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Build and Deploy Application
      working-directory: ./mlops-project/docker
      shell: bash
      run: |
        # Make script executable (for Git Bash on Windows)
        chmod +x build-and-deploy.sh
        
        # Set environment variables for the script
        export REGISTRY=${{ env.REGISTRY }}/${{ github.repository_owner }}
        export TAG=${{ github.sha }}
        export NAMESPACE=${{ env.NAMESPACE }}
        
        # Run the deployment script
        bash ./build-and-deploy.sh

    - name: Verify Deployment
      shell: bash
      run: |
        # Wait for deployments to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/housing-api -n ${{ env.NAMESPACE }}
        kubectl wait --for=condition=available --timeout=300s deployment/housing-frontend -n ${{ env.NAMESPACE }}
        kubectl wait --for=condition=available --timeout=300s deployment/housing-nginx -n ${{ env.NAMESPACE }}
        
        # Show deployment status
        kubectl get deployments -n ${{ env.NAMESPACE }}
        kubectl get services -n ${{ env.NAMESPACE }}
        kubectl get pods -n ${{ env.NAMESPACE }}

    - name: Test API Health
      shell: bash
      run: |
        # Port forward to test the API
        kubectl port-forward service/housing-nginx-service 8080:80 -n ${{ env.NAMESPACE }} &
        PORT_FORWARD_PID=$!
        
        # Wait for port forward to be ready
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8080/api/health || curl -f http://localhost:8080/health
        
        # Kill port forward
        taskkill //PID $PORT_FORWARD_PID //F 2>/dev/null || true

    - name: Create deployment summary
      shell: bash
      run: |
        echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Namespace**: ${{ env.NAMESPACE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployed Services:" >> $GITHUB_STEP_SUMMARY
        kubectl get services -n ${{ env.NAMESPACE }} -o wide >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Pod Status:" >> $GITHUB_STEP_SUMMARY
        kubectl get pods -n ${{ env.NAMESPACE }} >> $GITHUB_STEP_SUMMARY

  notify:
    needs: deploy
    runs-on: self-hosted
    if: always()
    steps:
    - name: Notify deployment status
      shell: bash
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi