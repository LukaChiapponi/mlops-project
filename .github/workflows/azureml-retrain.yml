name: Retrain Model in Azure ML

on: [push]

jobs:
  retrain_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register/Update environments
        run: |
          az ml environment create --file environment/dataprep-env.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml environment create --file environment/tensorflow.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml environment create --file environment/register-env.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}

      - name: Register/Update compute
        run: |
          az ml compute create --file environment/compute.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} || true

      - name: Create config.json
        run: |
          mkdir -p .azureml
          echo '${{ secrets.AZURE_CREDENTIALS }}' > tmp_credentials.json

          CLIENT_ID=$(jq -r '.clientId' tmp_credentials.json)
          TENANT_ID=$(jq -r '.tenantId' tmp_credentials.json)
          CLIENT_SECRET=$(jq -r '.clientSecret' tmp_credentials.json)

          echo '{
            "subscription_id": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "resource_group": "${{ secrets.AZURE_RESOURCE_GROUP }}",
            "workspace_name": "${{ secrets.AZURE_WORKSPACE }}",
            "credential": {
              "client_id": "'$CLIENT_ID'",
              "tenant_id": "'$TENANT_ID'",
              "client_secret": "'$CLIENT_SECRET'"
            }
          }' > .azureml/config.json

      - name: Copy config.json into component code directory
        run: |
          mkdir -p components/register/code/.azureml/
          cp .azureml/config.json components/register/code/.azureml/config.json

      - name: Debug config.json
        run: cat .azureml/config.json

      - name: Register/Update components
        run: |
          az ml component create --file components/dataprep/dataprep.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml component create --file components/training/training.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml component create --file components/register/register_model.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
      
      - name: Submit pipeline job
        id: submit_job
        run: |
          JOB_ID=$(az ml job create --file pipelines/pipeline.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --query name -o tsv)
          echo "job_id=$JOB_ID" >> $GITHUB_OUTPUT

      - name: Wait for pipeline job to finish
        run: |
          for i in {1..120}; do
            STATUS=$(az ml job show --name ${{ steps.submit_job.outputs.job_id }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --query status -o tsv)
            echo "Current job status: $STATUS"
            if [[ "$STATUS" == "Completed" || "$STATUS" == "Failed" || "$STATUS" == "Canceled" ]]; then
              break
            fi
            sleep 30
          done
      - name: Shut down compute cluster
        run: |
          az ml compute update --name project-ml-compute --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --min-instances 0