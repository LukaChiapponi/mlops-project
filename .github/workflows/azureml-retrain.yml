name: Retrain Model in Azure ML

on: [push]

jobs:
  retrain_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register/Update environments
        run: |
          az ml environment create --file environment/dataprep-env.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml environment create --file environment/tensorflow.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}

      - name: Register/Update compute
        run: |
          az ml compute create --file environment/compute.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} || true

      - name: Register/Update components
        run: |
          az ml component create --file components/dataprep/dataprep.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
          az ml component create --file components/training/training.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }}
      
      - name: Submit pipeline job
        id: submit_job
        run: |
          JOB_ID=$(az ml job create --file pipelines/pipeline.yaml --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --query name -o tsv)
          echo "job_id=$JOB_ID" >> $GITHUB_OUTPUT

      - name: Wait for pipeline job to finish
        run: |
          for i in {1..120}; do
            STATUS=$(az ml job show --name ${{ steps.submit_job.outputs.job_id }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --query status -o tsv)
            echo "Current job status: $STATUS"
            if [[ "$STATUS" == "Completed" || "$STATUS" == "Failed" || "$STATUS" == "Canceled" ]]; then
              break
            fi
            sleep 30
          done

      - name: Download model artifact
        run: |
          mkdir -p downloaded_model
          az ml job download --name ${{ steps.submit_job.outputs.job_id }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --workspace-name ${{ secrets.AZURE_WORKSPACE }} \
            --output-name model_output \
            --download-path ./downloaded_model

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded_model
          path: ./downloaded_model
          
      - name: Move trained model to Docker context
        run: |
          mkdir -p ./docker/app
          cp ./downloaded_model/named-outputs/model_output/trained_model.h5 ./docker/app/trained_model.h5

      - name: Shut down compute cluster
        run: |
          az ml compute update --name project-ml-compute --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_WORKSPACE }} --min-instances 0